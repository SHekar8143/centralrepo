AZURE DEVOPS:
============
1.BASIC CONCEPTS:
 1. WHAT IS CLOUD?
 2. WHAT IS A DATACENTER?
 3. SDLC
 4. APPLICATION TIER
  1. WEBSERVER
  2. APPLICATION SERVER
  3. STORAGE/DATABASE
 5. MODELS OF CLOUDS
  1. IAAS
  2. PAAS
  3. SAAS
 6. TYPES OF CLOUDS
  1. PUBLIC
  2. PRIVATE
  3. HYBRID
 7. ADVANTAGES AND DIS-ADVANTAGS OF CLOUD

2. ACCOUNT IN CLOUD
 1.ACTIVE DIRECTORY
  1. IMPORTANCE OF ACTIVE DIRECTORY
  2. ADDING OF USERS
 2.SUBSCRIPTION
  1. PROVIDING ACCESS TO OTHER USERS
 3.TYPES OF SUBSCRIPTIONS:
  1. FREE TRAIL
  2. PAY AS YOU GO
  3. ENTERPRISE LEVEL
 4.CREATION OF AZURE ACCOUNT

3. CREATING OF RESOURCES USING PORTAL:
 1.VITRUAL MACHINES:
  1. WINDOWS VM
  2. LINUX VM:
     COMMANDS:
    1. COPY COMMAND
     2. REMOVE COMMAND
     3. MOVE COMMAND
     4. NANO COMMAND
     5. CHANGING THE DIRECTORY
    6. GREP COMMAND
    7. CHMOD COMMAND
    8. MKDIR COMMAND
 2.VIRTUAL NETWORKS
  1. IP ADDRESS?
  2. SUBNETS
  3. PEERING
 3.STORAGE ACCOUNTS
  1. FILE SHARE
  2. CONTAINERS
 4.AZURE CONTAINER REGISTRY
 5.APP SERVCES
 6.KUBERNETES SERVICES
 7.RESOURCE GROUP
 8.CAPTURE OF VIRTUAL MACHINES

4. CREATING OF RESOURCES USING AZURE CLI:
 1.DOWNLOADING AND INSTALLING OF AZURE CLI 
 COMMANDS TO CREATE/DELETE:
  1. VIRTUAL MACHINES
  2. RESOURCE GROUP
  3. STORAGE ACCOUNT
5. POWERSHELL
 1. USAGE OF POWERSHELL SCRIPT
 2. RUNNING A SCRIPT WITH MULTIPLE COMMANDS
 3. USING VARIABLES IN SCRIPT
 4. PROVIDING VARIABLES ON FLY

6. ARM TEMPALTE: AUTOMATED WAY IN CREATING THE RESOUCES
 1. DEPLOY ARM TEMPLATE USING PORTAL
 2. DEPLOY ARM TEMPLATE USING AZURE CLI WITH PARAMETERS
 3. DEPLOY ARM TEMPLATE USING CI\CD PIPELINES.

7. GITHUB:
 1. INTRODUCTION OF GITHUB 
 2. CREATE AN ACCOUNT IN GITHUB
 3. CREATE AN REPOSITORY IN GITHUB
 4. CLONE/ADD/PUSH/PULL FROM/TO GITHUB REPOS TO/FROM LOCAL MACHINE USING:
  1. GIT CLI: DOWNLOAD AND INSTALL
  2. VISUAL STUDIO: DOWNLOAD AND INSTALL
  3. GITHUB DESKTOP: DOWNLOAD AND INSTALL

8. BRANCHING STRATEGY:
 1. UNDERSTANDING THE IMPORTANCE OF BRANCH
 2. CREATING OF BRANCH USING:
  1. GIT HUB REPOS
  2. VISUAL STUDIO
  3. GIT CLI 
   
9. DEVOPS STARTER:
 1. INTRODUCTION TO DEVOPS STARTER
 2. DEPLOY OF STATIC WEBSITE CODE FROM GITHUB INTO AZURE APP SERVICES.

10. DEVOPS ORAGNIZATION:
   1. USAGE OF AZURE DEVOPS ORGANIZATION
   2. CREATION OF ORGANIZATION AND PROJECT.
   3. INTRODUCTION TO AZURE BOARDS: 
  1. CREATION OF EPIC
  2. CREATION OF FEATURES
  3. CREATION OF PRODUCT BACKLOG ITEMS
  4. CREATION OF TASKS
    4. INTRODUCTION TO AZURE REPOS:
  1.CLONE/ADD/PUSH/PULL FROM/TO AZURE REPOS TO/FROM LOCAL MACHINE     USING VISAL STUDIO CODE
   3. INTRODUCTION TO AZURE CI AND CD PIPELINES.
  1.CREATING CI/CD PIPELINE USING CLASSIC EDITOR
   1. RUNNING CI/CD MANUALLY TO DEPLOY DOT NET APP.
   2. RUNNING CI/CD AUTOMATION TO DEPLOY DOT NET APP
  2.INTRODUCTION OF YAML FILES
   1. RUNNING BASIC CI/CD USING YAML
   2. RUNNING ADVANCE CI/CD USING YAML TO DEPLOY DOT NET APP.
 
11. DOCKER: 
 1. INTRODUCTION TO DOCKER
 2. ARCHITECTURE,MAIN COMPONENTS IN DOCKER
 3. DOWNLOAD AND INSTALLING OF DOCKER CLI.
 4. RUNNING OF DOCKER COMMANDS TO
  1. PULLING AN IMAGE FROM DOCKER HUB TO LOCAL MACHINE
  2. DELETE AN IMAGE
  3. PORTING TECHNIQUE CONCEPT TO RUN THE IMAGE IN CONATINER
  3. RUNNING THE IMAGE IN CONTAINER
 5. CREATING OWN IMAGE USING DOCKER FILE
 6. CONNECTING TO ACR FROM DOCKER
 7. PUSHING THE IMAGE TO ACR FROM DOCKER 
 8. CREATE CI/CD PIPELINES TO CREATE AN IMAGE,PUSH TO ACR,PULL THE IMAGE     FROM ACR AND DEPLOY TO WEBAPP USING AZURE.

12. KUBERNETES: ADVANCE CONCEPT WHICH MANAGES THE DOCKER
 1. INTRODUCTION TO KUBERNETES.
 2. ARCHITECTURE,MAIN COMPONENTS IN KUBERNETES
 3. KUBERNETES NETWORKING.
 4. CREATING OF KUBERNETES SERVICES USING PORTAL.
 5. INSTALLING OF KUBECTL CLI
 6. RUNNING COMMANDS TO :
  1. CONNECTING TO KUBERNETES ENVIRONMENT
  2. GET PODS
  3. GET NODES
  4. GET KUBERNETES LIST
  5. GET SERVICES
  6. RUNNING PODS
 7. INTRODUCTION TO YAML FILES IN KUBERNETES ENVIRONMENT.
  1. CREATING OF POD YAML
  2. INTRODUCTION AND CREATING OF SERVICE YAML
  3. CREATING OF DEPLOYMNETS YAML
 8. INTRODUCTION TO HELM CHARTS
 9. INTRODUCTION TO NAMESPACES
  1. CREATING OF NAMESSPACES
 10. DEPLOY THE PODS IN KUBERNETES ENV IN AUTOMATED WAY USING CI/CD          PIPLELINES .

13. TERRAFORM: CREATE THE RESOURCES==> HASHICORP
 1. INTRODUCTION TO TERRAFORM
 2. MAIN COMMANDS OF TERRAFORM
  1. TERRAFORM INIT
  2. TERRAFORM PLAN
  3. TERRAFORM APPLY
  4. TERRAFORM DESTROY
 3. CREATING OF RESOURCES:
  1. RESOURCE GROUP
  2. ACR
  3. VM
 4. IMPORTANCE OF TFSTATE FILE
 5. CREATING OF TFSTATE FILE IN STORAGE ACCOUNT
 
14. PREPARATION IN RESUME.
