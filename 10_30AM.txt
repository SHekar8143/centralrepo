CMDCLOUD??

PURCHASE A LAPTOP/ DESKTOP==> STORE

1. RAM 		4GB==> 8GB
2. PROCESSOR 	I5
3. HARD DISK	1TB==> EXTEND THE HARD DISK
4. UPS		==> REPLACE THE BATTERY
5. ANTI-VIRUS	==> RENEWAL THE POLICY

DAY 1 ==> PERFORMACE IS VERY HIGH

I HAVE INSTALLED LOT MANY APP/TOOLS

1 YEAR ==> PERFORMACE WILL BE DEGRADED

3RD PARTY==>MAINTAIN MY SYSTEM ON BEFALF OF MYSELF.

CLOUD.: HE HAS SOME CONDITIONS.
I HAVE MY LAPTOP, TRY TO INSTALL ALL THE TOOLS IN MY LAPTOP

LAPTOP, INTERNET==> CLOUD -VIRTUAL MACHINE(REMOTE)
4GB ==> 2000/MONTH
I HAVE CONSUMED FOR 10 HOURS AND I LOGGED OUT:RS66 CLOUD
DO I NEED TO PAY 2000/MONTH STILL??

NO
3/HOUR


8GB ==> 2500/MONTH
16GB
32GB

===============================================================
ENTERPRISES:		ABC COMPANY
SBI					LIC
SAVING APP : LAPTOP: VM1 SERVER
CURRENT APP : VM2: SERVER
HOME LOAN APP: VM3: SERVER
MORTGAGE LOAN APP: VM4: SERVER

FOR EVERY APP WILL NOT RUN ON ITS OWN ==> SERVER

1. BIG PLACE
2. INFRA STRUCTURE
3. AIR CONDITIONERS
4. ON-SITE ENGINEERS
5. PHYSICAL SECURITY GAURDS

3RD : CLOUD: SERVER ROOM==> DATACENTERS

AZURE ==> MICROSOFT

60+ REGIONS GLOBALLY
140+ DC

INDIA:
1. MUMBAI : 3-4 DC
2. PUNE : 3-4 DC
3. CHENNAI : 3-4 DC
=========================================================
ADVANTAGES OF CLOUD:
1. COST EFFECTIVE:
4GB OF RAM ==> 2000/MONTH
8GB OF RAM ==> 3500/MONTH
32GB OF RAM ==> 25000/MONTH

ELECTRICITY BILL / MONTH

AC
REF

BILL :500/MONTH
2500

2. SCALABILITY:

3. AGILITY:
BUILD A MESSENGER: WATERFALL METHOLOGY
1. DEVELOPER STARTS BUILDING THE CODE ==> 3-4 MONTHS
2. TESTERS WILL START TESTING THE CODE ==> 1 MONTH
3. DEPLOY THE CODE

AGILE METHODOLOGY:
AZURE BOARDS

4. ready to use services
5. quick deployment

==================================================
DISADVANTAGES:
1. RECURRING COST:
2. SECURITY /LACK OF CONTROL:
3. VENDOR LOCKED IN:
-

1. SDLC:SOFTWARE DEVELOPMENT LIFECYCLE

BUILD A CAR:
1. GATHER THE REQUIREMENTS.
2. START BUIDLING THE CAR AND COMPLETED.
3. TESTERS TEAM.
4. PLACE THE CAR IN SHOWROOM.

BUILD A MESSENGER:
1. GATHER THE REQUIREMENTS.
2. START DEVELOPING THE CODE AND COMPLETED.
3. TESTERS TEAM.
4. PLACE IT IN THE PLAY STORE.
=====================================================================
2. APPLICATION TIERS: YOUTUBE
	1. FRONT END ==> APP SERVER (REQUEST)==> DATABASE/STORAGE SYSTEM 
        	FRONT END<== APP SERVER<== RESPONSE<==DATABASE

1. WEBSERVER
2. APP SERVER
3. STORAGE SYSTEM/ DATABASE
============================================================================
3. MODELS OF CLOUDS:

1. UNLIMITED CALL ONLY ==> 200/MONTH
2. UNLIMITED CALL+100 SMS/DAY FREE ==> 350/MONTH
3. UNLIMITED CALL+100 SMS/DAY FREE+ 1.5GB OF DATA/DAY ==> 600/MONTH

TO RUN AN APPLICATION:
SERVER,OS,APP,STORAGE,NETWORK,VIRTUALIZATION,DATA,RUNTIME

1.STORAGE,NETWORK,VIRTUALIZATION,SERVER ==> INFRASTRUCTURE AS A SERVICE - IAAS
2.STORAGE,NETWORK,VIRTUALIZATION,SERVER,OS,RUNTIME==> PAAS ==> PLATFORM AS A SERVICE.
3.SERVER,OS,APP,STORAGE,NETWORK,VIRTUALIZATION,DATA,RUNTIME==> SAAS ==> SOFTWARE AS A SERVICE

===============================================================================
4. TYPES OF CLOUDS:
1. PRIVATE CLOUD:
GOVT:	PAY MY PROPERTY TAX  ==> APP: PUBLIC CLOUD
	REGISTER ON YOUR NAME
	APP: ENTER ALL DETAILS OF YOUR PROPERTY: PRIVATE CLOUD

BANK:	RATE OF INTEREST : HOME LOAN: APP: PUBLIC CLOUD	
	HOME LOAN:
	APP: SAVE ALL THE DETAILED INFOR OF CUSTOMER: PRIVATE CLOUD

2. PUBLIC CLOUD: APP CAN BE ACCESSED BY GENERAL PUBLIC
3. HYBRID CLOUD: CUSTOMERS WHO ARE USING BOTH PRIVATE AND WELL AS PUBLIC CLOUDS ARE CALLED AS HYBRID CLOUD CUSTOMERS.

		PUBLIC				PRIVATE
1. APP ARE ACCESSED BY ALL(PUBLIC)	APP CAN BE ACCESSED BY AUTHORIZED MEMBERS 						ONLY.
2.APP WHICH HAS LESS CONFIDENTIAL	APP WHICH HAS HIGH CONFIDENTIAL INFO
INFO
3. COST WILL BE LESS			COST WILL BE HIGH
4. INTERNET, IP ADDRESS			INTERNET, SECURE IP ADDRESS
5. MORE APP				LESS APP

==========================================================================
AZURE ACCOUNT CREATION:
1. VAILD EMAIL ID: USER ID TO ACCESS YOUR ACCOUNT
2. VALID PHONE NUMBER:
3. VALID CREDIT CARD: 

ACTIVE DIRECTORY:THIS WILL BE TAGGED TO YOUR ACCOUNT ONCE WE CREATE THE ACCOUNT.
	1. TO ADD THE NAMES TO PROVIDE THE ACCESS TO THE ACCOUNT 
SUBSCRIPTIONS: PAID MODEL
	1. FREE TRAIL 30 DAYS 14500/- CREDIT AMOUNT
	4GB OF RAM AND 1TB OF HARD DISK ==> 2000/MONTH
	I HAVE CONSUMED FOR JUST 2 HOURS AND LATER I HAVE DELETED THE VM ==> 6/-

	30TH DAY  5000/- ==> NO AND ACCOUNT WILL BE STOPPED
	20TH DAY   0/-   ==> NO AND ACCOUNT WILL BE STOPPED

	2. PAY AS YOU GO: PAN NUMBER
	3. ENTERPRISE LEVEL

5 PEOPLE ==> CLOUD

DISTRIBUTION LIST EMIAL ID

STOP : YOU WILL BE CHARGED BECAUSE WE ARE USING THE SPACE TO MAINTAIN MY STOPPED VM
DELETE: REMOVE EVERYTHING FROM CLOUD: YOU NO NEED TO PAY ANYTHING.

OWNER
CONTRIBUTOR
READ 

DEVELOPERS
TESTERS
DEPLOYMENT

SUPPORT TEAM
10/APP

ONE EMAIL DISTRIBUTION LIST

ABC.SUPPORT.TEAM@ABC.COM

RESOURCE GROUPS:
FOR EVERY RESOURCE WITH IN MY ACCOUNT WHAT EVER WE ARE TRYING CREATE IT REQUIRES
1. SUBSCRIPTION
2. RESOURCE GROUP 

MAX NUMBER OF SUB: UNLIMITED
MAX NUMBER OF RG/SUB: 980
PER RESOURCE:800
800 VM
800 SA
800 ACR

CREATION OF WINDOWS VIRTUAL MACHINE

RESOURCE GROUPS CAN BE CREATED IN 2 WAYS:
1.  WE CAN CREATE TH RG WITH IN THE RESOURCE WHAT WE ARE TRYING TO CREATE(VM,STORAGE ACCOUNTS..)
2. WE CAN CREATE THE RG ALL ALONE FIRST AND THEN WE CAN USE THE CREATED RG IN THE INSTANCES.

60+ REGIONS: 3-4 DATA CENTERS

EASTUS FOR RG: VRIT-RG
CREATE THE VM : VRIT-RG

RG AND VM BOTH WILL BE UNDER SAME LOCATION.

1. WHAT KING OF RESOURCE: VM
2. WHAT APP/PROJ CODE WE ARE RUNNING IN THE VM: DOTNET
3. WHICH LOC: EASTUS
4. ENV: DEV
5. ADD SERIAL NUMBER
VM-DOTNET-EASTUS-DEV-001

WINDOWS-VM
LINUX-VM


1. CHENNAI
2. MUMBAI
3. PUNE

AZURE SPOT INSTANCE:

EASTUS:

CLOUD WILL ALLOW YOU TO RUN YOUR APP IN EASTUS UNTILL THE MAIN APP PERSON STARTS HIS SERVER.

HUGE DISCOUNT:90%

PUBLIC USAGE:
1. HTTP: 80
2. HTTPS:443

3. SSH
4. RDP

1. HDD: HARD DISK DRIVE
2. SSD: SOLID STATE DRIVE

20.124.177.56

20.85.212.132
===================================================================

1.SYNTAX TO CONNECT THE LINUX VM:
SSH USERID@IPADDRESS

ssh vritadmin@23.96.10.222

Vritadmin@11111
***************
2. UPDATE THE LINUX VM:
sudo apt update

3. INSTALL NGINX IMAGE IN LINUX VM:
sudo apt install nginx

4. WHERE CAN WE FIND THE CODE:
/var/www/html

5. how can i know in which path i'm into
pwd(present working directory)
/home/vritadmin

6. HOW CAN I NAVIGATE FROM ONE DIR TO ANOTHER DIR:
cd /var/www/html

7. HOW CAN I SEE THE CONTENTS IN THE PATH:
ls

8. HOW CAN I VIEW THE CONTENT IN A FILE:
cat filename

9. HOW CAN I EDIT THE CONTENT IN A FILE:
sudo nano filename

10. HOW CAN WE SAVE THE CONTENT OF A FILE AFTER EDITING:
IN GENERAL NOTEPAD:
	1. CONTROL+S
	2. FILE==> SAVE
	3. CLOSE THE NOTEPAD==> SAVE

CONTROL+X==> CLOSE THE EDITOR
Y==> SAVE THE CONTENT
ENTER==>TO CONFIRM THE FILENAME

WINSCP:
EVERY FILE IN LINUX SYSTEM MAINLY WE HAVE 3 MODES :
1. OWNER: WHO CREATED THE FILE			: READ	WRITE	EXECUTE
2. GROUP: MEMBERS WHO ARE WORKING IN THE TEAM:  : READ	WRITE	EXECUTE
3. OTHERS: WHO ARE NOT RELATED TO THE TEAM 	: READ	WRITE	EXECUTE

rwxrwxrwx: this file has full permissions to everybody
rwxrw-r--:
rwxrw-rw-:

11. HOW CAN WE CHANGE THE PERMISSIONS TO A FILE:
	sudo CHMOD 755 FILENAME

=========================================================1
NEW VM IS CREATED
UPDATED THE VM
DEPLOYED NGINX APP
UPDATED WITH MY OWN CODE

I WANT TO CREATE 100 VM WITH SAME CODE WHAT WE HAVE CURRENTLY

CAPTURE THE VM: COPY EVERYTHING WHATEVER WE HAD IN CURRENT VM AND WE CAN HAVE A SEPARATE COPY:IMAGE

NEW VM: IMAGE
======================================================================
VIRTUAL NETWORK:
===============

IP ADDRESS: 

0.0.0.1 ==> FIRST IP ADDRESS GLOBALLY

4,294,967,296==> IPV4

255.255.255.254 ==> LAST IP ADDRESS GLOBALLY

BINARY MODE

20

00001111

VNET1 ==> 10.1.0.0/16 ==> 65K IP ADDRESS==>10.1.0.1 - 10.1.255.254
SUBNET1==> 10.1.1.0/24 ==> 256 IP ADDRESS ==> DEV ONLY: WINDOWS VM
SUBNET2==> 10.1.2.0/24 ==> 256 IP ADDRESS ==> ADMIN ONLY: LINUX VM
VNET1-RG	EASTUS

PEERING: ESTABLISH THE CONNECTION BETWEEN MULTIPLE NETWORKS

VNET2 ==> 10.2.0.0/16 ==> 65K IP ADDRESS==>10.1.0.1 - 10.1.255.254
SUBNET1==> 10.2.1.0/24 ==> 256 IP ADDRESS ==> HR ONLY : LINUX VM
SUBNET2==> 10.2.2.0/24 ==> 256 IP ADDRESS ==> PAYROLL ONLY: LINUX VM
VNET2-RG	WESTUS

10.0.0.0/16
============================================================
STORAGE ACCOUNT:
===============
1. FILE SHARE:WHICH MAINTAINS THE CONTENT WRT THE TEAM MEMBERS WHO ARE WORKING FOR AN APPLICATION. IT CAN BE ACCESSED BY ONLY TEAM MEMBERS.
2. CONTAINER: WHICH MAINTAINS THE CONTENT WRT THE APPLICATION WHERE IT CAN BE ACCESSED BY PUBLIC
	1. PUBLIC CONTAINER: PUBLIC
	2. PRIVATE CONTAINER: AUTHORIZED MEMBERS ONLY.

SAS: 

region: 3-4 data centers
					CHENNAI
		PRIMARY		BACKUP1		BACKUP2		BACKUP3
	USER==>	DC1		DC2		DC3		DC4

REST API

API: APPLICATION PROGRAMMING INTERFACE

REQUEST ==> API==> RESPONSE

JSON:
{
	"WEATHER":
			{
			"CITY":"HYDERABAD"
			"TEMP":"20C"
			}
}

XML:

<h>WEATHER:
	<H>CITY=HYDERABAD</H>
	<H>TEMP=20C</H>
</H>

REpresenatation
State
Trasfer

BLOB/ OBJECT DB  : VIDEOS, MUSIC FILES, IMAGE: PUBLIC
BLOCK DB : CLOB: AUTHORIZED MEMBERS ONLY: LOGS

NAME
ADDRESS
PHONENO

JAN1 ST : WINSCP, PP..==> RESTORE POINT: CAPTURED


MAR 1ST:  WINSCP, PP..==>  ==> GOOD

JAN 3RD... JAN 9TH

soft delete:IT WILL STORE THE COMPONENT SOMEWHERE WITH THE SYSTEM:365 DAYS
hard delete: IT WILL NEVER STORE ANY COPY WITH THE SYSTEM.ITS PERMANENT DELETE.

1. FILE SHARE: 
3 MEMBERS :
1. EMAIL:OUTLOOK: 
2. COMMON DRIVE WILL BE TAGGED TO ALL OF THE 3 MEMBERS.
MEMBER 1 HAD PLACED A FILE IN THE CD. AUTOMATICALLY THE OTHER 2 MEMBERS CAN SEE THE CODE.
================================================================================
APP SERVICES: URL: LINK:WWW.YOUTUBE.COM
============
VM: IP ADDRESS

UNIFORM RESOURCE LOCATOR

VM:/VAR/WWW/HTML
WEBAPP:/site/wwwroot
======================================================================
CLI: COMMAND LINE INTERFACE:
TO CREATE THE RESOURCE GROUP:
az group list 
JSON FORMAT:
KEY:VALUE 
"QUESTION":"ANSWER"

{
"name":"cloud-shell-storage-centralindia",
"location":"EASTUS",
"type": "Microsoft.Resources/stoarge account",
"managedBy": null,
"tags":{ 
	"ENV":"DEV",
	"LOC:EASTUS"
	}
},
{
"name":"DefaultResourceGroup-EUS"
},
{
"name":"VRIT-RG"
}





[
  {
    "id": "/subscriptions/0fbd6c30-4905-4612-b591-1886c29d279f/resourceGroups/cloud-shell-storage-centralindia",
    "location": "centralindia",
    "managedBy": null,
    "name": "cloud-shell-storage-centralindia",
    "properties": {
      "provisioningState": "Succeeded",
    		},
    "tags": null,
    "type": "Microsoft.Resources/stoarge account"
  },





  {
    "id": "/subscriptions/0fbd6c30-4905-4612-b591-1886c29d279f/resourceGroups/DefaultResourceGroup-EUS",
    "location": "eastus",
    "managedBy": null,
    "name": "DefaultResourceGroup-EUS",
    "properties": {
      "provisioningState": "Succeeded"
    },
    "tags": null,
    "type": "Microsoft.Resources/resourceGroups"
  },
  {
    "id": "/subscriptions/0fbd6c30-4905-4612-b591-1886c29d279f/resourceGroups/VRIT-RG",
    "location": "eastus",
    "managedBy": null,
    "name": "VRIT-RG",
    "properties": {
      "provisioningState": "Succeeded"
    },
    "tags": null,
    "type": "Microsoft.Resources/resourceGroups"
  }
]

1. DOWNLOAD THE AZURE CLI  TO OUR LOCAL SYSTEM AND INSTALL
2. GO TO CMD PROMPT: az login

1. HOW CAN WE LIST OUT THE RESURCE GROUPS IN OUR SUBSCRIPTION:
az group list ==> JSON FORMAT
az group list -o table ==> SIMPLE TABULAR FORMAT.

2. HOW CAN WE CREATE THE RESOURCE GROUP:
az group create --resource-group VRIT-RG --location EASTUS

3. HOW CAN WE DELETE THE RESOURCE GROUP ALONG WITH CONFIRMATION:
az group delete --resource-group VRIT-RG -y

4. HOW CAN WE CREATE THE VIRTUAL MACHINE:
az vm create -n LINUX-VM -g VRIT-RG --image UbuntuLTS --admin-username vritadmin --admin-password Vritadmin@11111

5. HOW CAN WE DELETE THE VM:
az vm delete --name LINUX-VM --resource-group VRIT-RG -Y

6. HOW CAN WE CREATE A STORAGE ACCOUNT
az storage account create -n vritsolhydsa -g VRIT-RG -l westus --sku Standard_LRS

7. HOW CAN WE DELETE THE STORAGE ACCOUNT:
az storage account delete -n vritsolhydsa -g VRIT-RG -y

8. HOW CAN WE RUN ARM TEMPLATE USING AZ COMMAND:
az deployment group create --name vm-deploy --resource-group VRIT-RG --template-file VMDeploy_ARM.json

9. HOW CAN WE RUN ARM TEMPLATE with PARAMTERS USING AZ COMMAND:
az deployment group create --name vm-deploy --resource-group devops-RG --template-file VM_CREATE_PARAMTERS.json --parameters @vm-params.json

list my rg
create a new rg
list my rg

powershell
=================================================================
ARM TEMPLATE: CREATING THE RESOURCES

1.CREATING A VIRTUAL MACHINE:
==============================
JSON FORMAT:
{
"KEY" :"VALUE "
}
{
"PARAMETERS":"VALUES KEEP ON CHANGING WRT NEW VM"
{
"IMAGE":
 "DATATYPE":"STRING",
 "VALUE":"WINDOWS LATEST",
 "ALLOWED VALUES":
	{
	 WINDOWS LATEST,
	 WINDOWS GEN2 2022
	 UBUNTU LATEST,
	 }
	
 "METADATA":"THIS IS THE OS NAME FOR THE VM"
},
{
"USER ID":
"DATATYPE":"STRING",
 "METADATA":"THIS IS THE USER ID FOR THE VM"
},
PASSWORD: CHANGE
SIZES: CHANGE
VM NAME: CHANGE
}
VARIABLES:VALUES WILL BE STATIC WRT NEW VM
SUBNET NAME:VRITSUBNET1
VIRTUAL NETWORK NAME
SUBNET :10.1.0.1/24 ==> 256 IP ADDRESS
VNET: 10.0.0.0/16 ==> 65K IP ADDRESS

RESOURCES:
7. VIRTUAL NETWORK
8. STORAGE ACCOUNT
9. VIRTUAL MACHINE
10.VIRTUAL INTERFACES

EVERY PARAMETER WILL CONTAIN:
1. DATA TYPE
2. DEFAULT VALUE
3. METADATA
4. ALLOWED VALUES

EVERY ARM TEMPLATE WILL BE HAVING:
1. PARAMETERS==>optional
2. VARAIBLES==> optional
3. RESOURCES=> MANDATORY
=================================================================
GITHUB:
=======

DEVELOPER: CODE 
FILE 1.TXT ==> ONSHORE TEAM

1. EMAIL
2. FILE SHARE: FILE1.TXT: ONE VERSION OF FILE
3. GITHUB: FILE1.TXT

PREVIOUS VERSION:
FILE1.TXT ==> 1-JAN 2022
FILE1.TXT ==> 15-JAN 2022

OFFSHORE==> DEVELOP THE CODE ==>PUSH ==> CLOUD(GITHUB) <== PULL ==> APPEND MORE CODE ==> PUSH TO CLOUD (GITHUB)
===================================================================

1.HOW CAN WE CLONE THE REPOSITORY TO LOCAL MACHINE:
git clone https://github.com/Shyam2810/WEBAPP.git

2. HOW CAN WE PUSH THE CODE TO GITHUB:
git add filename or git add .

LOCAL REP (SAMPLE.TXT)==> STAGING AREA(SAMPLE.TXT)

3. git status ==> SHOW US ALL THE CONTENT IN STG AREA.

4. git restore --staged .==> SEND BACK ALL OR FEW FILES TO LOCAL REPOS FROM STG AREA.

5. git commit -m "some comments"

STAGING AREA(SAMPLE.TXT) ==> CONFIRM TO PUSH THE FILE TO REMOTE REPOS
6. git push

STAGING AREA(SAMPLE.TXT)==> PUSHED TO GIT HUB REPOS

7. git pull ==> THE CURRENT CONTENTS IN GITHUB REPOS WILL BE PULLED TO LOCAL REPOS.

===============================================
1. CLONE
2. ADD
3. COMMIT
4. PUSH
5. PULL

1. GIT CLI ==> TO MAKE THE THINGS HAPPEN, WE HAVE TO RUN THE COMMANDS
2. GITHUB DESKTOP ==> ITS KIND OF WINDOWS SYSTEM.==> UI
3. VISUAL STUDIO CODE ==> UI

DEVOPS STARTER: INTRODUCTION FOR AZURE DEVOPS

1.WE WILL HAVE THE CODE IN GITHUB ==> DEPLOY THE CODE IN GITHUB TO APP SERVICES WITH IN AZURE CLOUD.
2.FROM AZURE, WE WILL CREATE AN REP IN GITHUB.
3.THE REP WHICH IS CREATED IN GITHUB CONATINS SOME DEFAULT CODE.
4.AZURE WILL PULL THE CODE AND WILL TRY TO RUN 2 JOBS IN GITHUB BY AZURE:
	1. BUILD JOB: IT WILL READ THE CODE FROM GITHUB AND IT WILL CONVERT THE 	   CODE FROM INCONSISTENT FORMAT TO CONSISTENT FORMAT.==> CI
	2. DEPLOYMENT JOB:THE CONSISTENT FORMAT WHAT IS BEEN CONVERTED ALREADY WILL 	   BE USED TO DEPLOY IN APP SERVICES WITH IN AZURE.==> CD
5. WEBAPP WILL BE CREATED IN AZURE AUTOMATICALLY.

CI==> CONTINOUS INTEGRATION
CD==> CONTINOUS DEPLOYMENT

1. ORGANIZATION??
					ABC COMPANY
	BANKING			INSURANCE		RETAIL
APP1	APP2	APP3	APP1	APP2	APP3	APP1	APP2	APP3
3-4	3-6	2-3	3-4	3-6	2-3	3-4	3-6	2-3

	ORGANIZATION1		ORGANIZATION2		ORGANIZATION3
	PROJECT1:WEBAPP		PROJECT2		PROJECT3			WEBAPP==>REP1==>APP1
	REP2==>APP2
	REP3==>APP3

	ORG
	APP1==>PRJ1==> REP1
	APP2==>PRJ2==> REP2
	APP3==>PRJ3==> REP3


1. AZURE BOARDS
				EPIC1
	FEATURE1				FEATURE2
DES1	DES2	DES3				DES1	DES2	DES3
T1T2	T1T2	T1T2				T1T2	T1T2	T1T2	

2. AZURE REPOS
3. PIPELINES
=========================================================================
BRANCHING STRATEGY:
==================

1. MAIN:DEFAULT BRANCH (PROD)

DEV BRANCH : CREATE THE CODE AND PUSH AND RUN MY APP, CHECK FOR THE RESULTS
QA BRANCH  : PUSH THE UPDATED CODE FROM DEV BR AND RUN MY APP, CHECK FOR THE RESULTS
PROD/MAIN/MASTER BRANCH: PUSH THE CODE AND RUN MY APP IN LIVE ENV


CONTINOUS INTEGRATION:(CI)
RESTORE: TO READ THE CODE FROM MY AZURE REPOS. THIS IS THE INITIAL POINT FOR MY CI PIPELINE.
BUILD: IT WILL CONVERT THE  CODE FROM INCONSISTENT FORMAT TO CONSISTENT FORMAT.
TEST: IT WILL DO SOME INTERNAL TESTING.
PUBLISH: AZURE WILL TRY TO PUSH THE CONVERTED CODE TO A ZIP FOLDER.(DROP/s.zip- ARTIFACT)
PUBLISH ARTIFACT:AZURE WILL MOVE THE ARTIFACT(ZIP FOLDER) FROM THE PLACE WHERE IT GOT CREATED TO ANOTHER PATH WHERE THE ARTIFACT CAN BE DELOPYED INTO WEBAPP.

CONTINOUS DEPLOYMENT (CD):
1. WHERE IS THE ARTIFACT ??
2. WHERE WE NEED TO DEPLOY THE ARTIFACT??

YAML FILES:
CI
CD

INDENTATION ==> SPACES WE HAVE TO MAINTAIN

TRIGGER:
- MASTER

POOL:
 VMIMAGE: UBUNTU-LATEST

STAGES:
	STAGE:BUILD
		JOBS:
			JOB:
				STEPS:
				- SCRIPT: ECHO HELLO WORLD!!
	STAGE:DEPLOY
		JOBS:
			JOB:
				STEPS:
				- SCRIPT: ECHO DEVOPS !!
			JOB:
				STEPS:
				- SCRIPT:ECHO VRIT SOLUTIONS!!

steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '$(Parameters.RestoreBuildProjects)'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '$(Parameters.RestoreBuildProjects)'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
  condition: succeededOrFailed()

1. DEFAULT DIRECTORY: 
1. EXISTING ORGANIZATION ==>CREATE A PROJECT
2. GO TO PIPELINES AND CHOOSE GITHUB AS SOURCE.
3. AZURE PIPELINE ==> GRANTING ACCESS==> APPROVE AND INSTALL AT GITHUB
4. NEW ORGANIZATION AND NEW PROJECT(MICROSOFT ACCOUNT)
5. ALLOW AZURE TO CREATE THE NEW ORGANIZATION AND NEW PROJECT.
6. DELETE NEW ORGANIZATION AND NEW PROJECT WHICH HAS BEEN CREAETD UNDER YOUR MS ACCOUNT.
7. NAVIGATE TO DEFAULT DIRECTORY ==> ACCESS THE PROJECT
8. GO TO PIPELINES==> CHOOSE THE REPOS(GITHUB)==> CONFIGURE THE PIPELINE
9. PLACE THE ACTUAL YAML SCRIPT
10. RELEASE PIPELINE ==> AUTHORIZE YOUR SUBSCRIPTION AND PROVIDE THE WEBAPP DETAILS
11. SAVE 
12. PIPELINE AND ==> RUN
===========================================================================
DOCKER:
======
APP: MULTIPLE FEATURES

FILE: 10K LINES OF CODE ==> APP
F1 ==> 1-1000 ==> FILE1 ==> APP1: DB1: IMAGE1: CONTAINERS1
F2 ==> 1-1500 ==> FILE2 ==> APP2: DB2: IMAGE2: CONTAINERS2
F3 ==> 1-1800 ==> FILE3 ==> APP3: DB3: IMAGE3: CONTAINERS3

WHAT IS THE ARCHITECTURE OF DOCKER:
===================================
1. DOCKER CLI:RUN THE COMMANDS
2. DOCKER HOST:
	1. DOCKER DAEMON: WHICH IS READING AND IMPLEMENTING MY COMMANDS FROM DOCKER CLI.
	2. CONTAINER SPACE: THIS CONTAINS ALL CONTAINERS(IMAGES RUNNING INTERNALLY)
	3. IMAGES SPACE: THIS CONTAINS ALL IMAGES AT LOCAL REPOSITORY
3. REMOTE REPOSITORY- DOCKER HUB: THIS CONTAINS LOT MANY BASE CODE IMAGES: NGINX

=======================================================================
BASIC COMMANDS:

1. HOW CAN I SEE THE IMAGES LIST IN LOCAL REP:
docker images

2. HOW CAN I SEE THE CONTAINERS LIST IN LOCAL REP:
docker container ls
docker ps

3. HOW CAN I DELETE THE IMAGE FORM LOCAL REP:
docker image rm -f image nginx(image_name)

4. HOW CAN I DELETE THE CONATINER FORM LOCAL REP: 
docker rm container_id/container_name

5. HOW CAN I STOP THE CONTAINER:
docker stop container_id/container_name

6. HOW CAN I START THE CONTAINER:
docker start container_id/container_name

7.docker ps -a

8. HOW CAN WE START/RUN THE CONTAINER:
docker run -d -p 80(LOCALHOST PORT):80(IMAGE PORT) nginx(image_name):tag

9. HOW CAN WE PULL THE IMAGE TO LOCAL REP:
docker pull (nginx)image_name

10. to get ipaddress for conatiners:
docker inspect container_id/conatiner_name

11.HOW CAN I PLACE MY OWN CODE FILE IN DOCKER CONTAINER:
docker exec -it e84e51889f29(container_id/conatiner_name) sh

DOCKER build -t webapp:1.0 .

DOCKER PULL NGINX ==> DOWNLOAD THE DOCKER HUB AND SAVE IT IN THE LOCAL REP.

FROM NGINX
COPY OWN_INDEX.HTML /PATH/

AZURE CONTAINER REGISTRY==>SECURE PLACE/REPOSITORY WHERE WE CAN HAVE OUR IMAGES STORED

1.HOW CAN I LOGIN INTO ACR:
docker login vritsolacr.azurecr.io

2. to push the images to acr, we have to tag the local image to remote acr image name.
docker tag localimagename:tag remoteacr_login server/remoteimagename:tag

docker tag nginx:latest vritsolacr.azurecr.io/nginx_app:1.0

3. HOW CAN WE PUSH THE TAGGED IMAGE TO ACR:
docker push image name:tag

docker push vritsolacr.azurecr.io/nginx_app:2.0

4. how can we install docker in linux vm:
docker apt install docker.io

build the image ==> pushed the image to ACR ==> pull the image from ACR and run the image in a contianer ==> deployed in webapp

CI/CD PIPLELINES:

PUBLISH THE CODE
DOCKER CONTAINER

STEP1:CREATE AN ACR 
STEP2: NEED TO BUILD THE IMAGE USING DOCKER FILE AND PUSH THE IMAGE TO ACR USING CI/CD
STPE3: WE NEED TO CREATE THE WEBAPP FIRST.
	 WE HAVE TO PROVIDE THE ACR DETAILS
	 WE HAVE TO PROVIDE THE IMAGE AND TAG DETAILS MANUALLY
=================================================================
KUBERNETES: ADVANCE CONCEPT FOR DOCKER
===========

ARCH:
====
1. KUBECTL CLI: CLI IS USED TO SEND OUT THE COMMANDS TO KUBERNETES TO MANAGE THE CONATINERS
2. MASTER : TRYING TO PROCESS THE ORDERS FROM CLI. IT NEVER IMPLEMENT ANY KIND OF REQUEST FROM CLI
3. NODES: WHO WILL PROCESS THE REQUESTS FROM MASTER.

CAPTAIN OF WAITERS:
WAITERS:  PROCESS THE ORDER AND DELIVER THE FOOD TO THE CUSTOMERS.

NUMBER OF NODES WE CAN CREATE PER KUBERNETES CLUSTER: 1000(3-5)
NUMBER OF PODS WE CAN CREATE PER NODE:110
NUMBER OF CONTAINERS WE CAN RUN IN ONE POD:300000
TOTAL NUMBER OF CONTAINERS IN A NODE :110*300000=>33000000

EVERY TIME WE WILL GO WITH ONE CONTAINER/POD: 110*5=550

EVERY NODE CAN CONTAIN 110 PODS OR 110 CONTAINERS : 110 APPLICATION


KUBECTL
DOCKER
AZ
GIT


Downloading client to "C:\Users\DELL\.azure-kubectl\kubectl.exe" from "https://storage.googleapis.com/kubernetes-release/release/v1.23.5/bin/windows/amd64/kubectl.exe"

Please add "C:\Users\DELL\.azure-kubectl" to your search PATH so the `kubectl.exe` can be found. 2 options:
    1. Run "set PATH=%PATH%;C:\Users\DELL\.azure-kubectl" or "$env:path += 'C:\Users\DELL\.azure-kubectl'" for PowerShell. This is good for the current command session.
    2. Update system PATH environment variable by following "Control Panel->System->Advanced->Environment Variables", and re-open the command window. You only need to do it once
Downloading client to "C:\Users\DELL\AppData\Local\Temp\tmp9e00xslz\kubelogin.zip" from "https://github.com/Azure/kubelogin/releases/download/v0.0.11/kubelogin.zip"
Please add "C:\Users\DELL\.azure-kubelogin" to your search PATH so the `kubelogin.exe` can be found. 2 options:
    1. Run "set PATH=%PATH%;C:\Users\DELL\.azure-kubelogin" or "$env:path += 'C:\Users\DELL\.azure-kubelogin'" for PowerShell. This is good for the current command session.
    2. Update system PATH environment variable by following "Control Panel->System->Advanced->Environment Variables", and re-open the command window. You only need to do it once

4GB OF RAM ==> AGNET POOL 1
8GB OF RAM ==> AGENT POOL 2

==========================================================
STAGES:	
	STAGE:
		JOBS:
			JOB
				STEPS:			
					TASK1
					TASK2
1. VERSION
2. KIND:POD
3. METADATA: NAME OF THE POD
4. REPLICAS= 
4. SPECIFICATION:IMAGE NAME, TAG

>kubectl run webserver --image nginx:1.20

>kubectl apply -f deployment.yaml

i want to create multiple pods(10) using the same image.
if i delete any one of the pod,i should create the pod automatically

DEPLOYMENTS:
===================================================================
WE CAN PARMERER USING HELM CHARTS:
===================================

1. DOWNLOAD THE HELM.EXE
2. WE WILL CREATE A FOLDER "HELM". PLACE THE HELM.EXE FILE IN THE FOLDER
3. GO TO SYSTEM ENV VARIABLES==> ADD NEW PATH

STEPS TO FOLLOW TO PARAMETER THE YAML FILE IN KUBERNETES:
1. CREATE A FOLDER  "TEMPLATES" ==> YAML FILE ==>VALUES ARE PARAMETERIZED
2. values file

helm install helm_app .\app33\ ==> first time deployment
helm upgrade helm_app .\app33\ ==> second time deployment

helm.exe file

name spaces

kubectl create ns -dev
===========================================================================
TERRAFORM: HASHICORP: 3RD PARTY TOOL
==========
USING TF WE CAN CREATE THE RESOURCRS IN ANY CLOUD.
ARM TEMPLATES : PART OF AZURE

1. PROVIDER FILE: SCRIPT
terraform {
  required_providers {
    azurerm = {
      source  = "hashicorp/azurerm"
      version = "=3.0.0"
    }
  }
}

# Configure the Microsoft Azure Provider
provider "azurerm" {
  features {}
}
============

MAIN COMMANDS:
1. TERRAFORM INIT: THIS HELPS THE TERRAFORM TO INITIATE THE ENVIRONMENT AND GET READY FOR RUNNING THE SCRIPTS TO CREATE THE RESOURCES IN AZURE.
2. TERRAFROM PLAN: 
PROVIDER.TF
Rg.TF:
resource "azurerm_resource_group" "example" {
  name     = "DEVOPS-RG"
  location = "WestUS"
}

1. DO WE HAVE CREATED DEVOPS-RG RG EARLIER USING TERRAFORM?
2. DO WE HAVE THE SAME RG NAME IS AVAILABLE AT AZURE PORTAL?

THE FILE WHICH IS  USED TO COMPARE IS CALLED : 
TERRAFORM.TFSTATE : VRIT-RG AND WEST EUROPE

3. TERRAFROM APPLY: THIS COMES WITH THE PLAN AND EXECUTES THE PLAN
APPROVAL : Yes

4. TERRAFORM DESTROY: THIS WILL DELETE ALL THE RESOURCES BASED UPON THE DETAILS AVAILBLE IN TFSTATE FILE WITH IN THE SUB

STEPS TO DOWNLOAD AND INSTALL THE TERRAFORM:
1. WGET https://releases.hashicorp.com/terraform/1.1.7/terraform_1.1.7_linux_amd64.zip

SCRIPT				TFSTATE FILE		sub
YES				YES			NO CHANGE
NO				YES			DELETED
YES				NO			CREATED
no				no		if already exists : NO CHANGE







